conformance_automated = "Fail"
errors_diff = """
Line 59: Expected 1 errors
Line 91: Expected 1 errors
Line 93: Expected 1 errors
Line 159: Expected 1 errors
Line 172: Expected 1 errors
Line 187: Expected 1 errors
Line 189: Expected 1 errors
"""
output = """
callables_annotation.py:25:5: error[missing-argument] No argument provided for required parameter 2
callables_annotation.py:26:11: error[invalid-argument-type] Argument is incorrect: Expected `str`, found `Literal[2]`
callables_annotation.py:27:15: error[too-many-positional-arguments] Too many positional arguments: expected 2, got 3
callables_annotation.py:29:5: error[missing-argument] No arguments provided for required parameters 1, 2
callables_annotation.py:29:8: error[unknown-argument] Argument `a` does not match any known parameter
callables_annotation.py:29:13: error[unknown-argument] Argument `b` does not match any known parameter
callables_annotation.py:35:8: error[too-many-positional-arguments] Too many positional arguments: expected 0, got 1
callables_annotation.py:55:5: error[invalid-type-form] Special form `typing.Callable` expected exactly two arguments (parameter types and return type)
callables_annotation.py:55:14: error[invalid-type-form] The first argument to `Callable` must be either a list of types, ParamSpec, Concatenate, or `...`
callables_annotation.py:56:14: error[invalid-type-form] The first argument to `Callable` must be either a list of types, ParamSpec, Concatenate, or `...`
callables_annotation.py:57:18: error[invalid-type-form] List literals are not allowed in this context in a type expression: Did you mean `list[int]`?
callables_annotation.py:58:5: error[invalid-type-form] Special form `typing.Callable` expected exactly two arguments (parameter types and return type)
callables_annotation.py:58:14: error[invalid-type-form] The first argument to `Callable` must be either a list of types, ParamSpec, Concatenate, or `...`
"""
